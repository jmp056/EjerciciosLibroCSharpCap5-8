<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wP8+MXoTfHe8QAAAABJRU5ErkJggg==
</value>
  </data>
</root>